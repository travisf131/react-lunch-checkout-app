[{"C:\\Users\\travi\\Desktop\\SET\\React\\react-lunch-checkout-app\\src\\index.js":"1","C:\\Users\\travi\\Desktop\\SET\\React\\react-lunch-checkout-app\\src\\reportWebVitals.js":"2","C:\\Users\\travi\\Desktop\\SET\\React\\react-lunch-checkout-app\\src\\App.js":"3","C:\\Users\\travi\\Desktop\\SET\\React\\react-lunch-checkout-app\\src\\components\\Layout\\Layout.js":"4","C:\\Users\\travi\\Desktop\\SET\\React\\react-lunch-checkout-app\\src\\containers\\BurgerBuilder\\BurgerBuilder.js":"5","C:\\Users\\travi\\Desktop\\SET\\React\\react-lunch-checkout-app\\src\\components\\Burger\\Burger.js":"6","C:\\Users\\travi\\Desktop\\SET\\React\\react-lunch-checkout-app\\src\\components\\Burger\\BurgerIngredient\\BurgerIngredient.js":"7","C:\\Users\\travi\\Desktop\\SET\\React\\react-lunch-checkout-app\\src\\components\\Burger\\BuildControls\\BuildControls.js":"8","C:\\Users\\travi\\Desktop\\SET\\React\\react-lunch-checkout-app\\src\\components\\Burger\\BuildControls\\AddItem\\AddItem.js":"9"},{"size":500,"mtime":499162500000,"results":"10","hashOfConfig":"11"},{"size":362,"mtime":499162500000,"results":"12","hashOfConfig":"11"},{"size":680,"mtime":1610771178935,"results":"13","hashOfConfig":"11"},{"size":382,"mtime":1610674003885,"results":"14","hashOfConfig":"11"},{"size":1237,"mtime":1610772133554,"results":"15","hashOfConfig":"11"},{"size":1279,"mtime":1610758144137,"results":"16","hashOfConfig":"11"},{"size":1502,"mtime":1610671944660,"results":"17","hashOfConfig":"11"},{"size":918,"mtime":1610772295728,"results":"18","hashOfConfig":"11"},{"size":487,"mtime":1610772066208,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"wknvlq",{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"31","messages":"32","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33","usedDeprecatedRules":"22"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36","usedDeprecatedRules":"22"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\travi\\Desktop\\SET\\React\\react-lunch-checkout-app\\src\\index.js",[],["41","42"],"C:\\Users\\travi\\Desktop\\SET\\React\\react-lunch-checkout-app\\src\\reportWebVitals.js",[],"C:\\Users\\travi\\Desktop\\SET\\React\\react-lunch-checkout-app\\src\\App.js",[],"C:\\Users\\travi\\Desktop\\SET\\React\\react-lunch-checkout-app\\src\\components\\Layout\\Layout.js",[],"C:\\Users\\travi\\Desktop\\SET\\React\\react-lunch-checkout-app\\src\\containers\\BurgerBuilder\\BurgerBuilder.js",[],"C:\\Users\\travi\\Desktop\\SET\\React\\react-lunch-checkout-app\\src\\components\\Burger\\Burger.js",["43"],"import React from 'react';\r\nimport BurgerIngredient from './BurgerIngredient/BurgerIngredient';\r\nimport styles from './Burger.module.css';\r\n\r\nconst burger = (props) => {\r\n\r\n    // this will be the final array of JSX BurgerIngredient components created below\r\n    let ingredientList = []\r\n\r\n    // get all of the keys from the ingredients object\r\n    const dynamicIngredientsKeys = Object.keys(props.ingredients)\r\n    \r\n    // map the above array, and for each key figure out how many of that item there are\r\n    dynamicIngredientsKeys.map( igKey => {\r\n\r\n        // for the value (or amount) of each key (or ingredient), push an ingredient component to ingredientList array.\r\n        for (let i = 0; i < props.ingredients[igKey]; i++){\r\n            ingredientList.push(\r\n                <BurgerIngredient key={igKey + i} type={igKey}/>\r\n            )\r\n        }\r\n    })\r\n\r\n    // if there are no ingredients selected, display message\r\n    if (ingredientList.length === 0){\r\n        ingredientList = <p>Create Your Burger!</p>\r\n    }\r\n\r\n\r\n    return (\r\n        <div className={styles.Burger}>\r\n            <BurgerIngredient type=\"bread-top\" />\r\n            {ingredientList}\r\n            <BurgerIngredient type=\"bread-bottom\" />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default burger;","C:\\Users\\travi\\Desktop\\SET\\React\\react-lunch-checkout-app\\src\\components\\Burger\\BurgerIngredient\\BurgerIngredient.js",["44"],"import React from 'react';\r\nimport styles from './BurgerIngredient.module.css';\r\nimport PropTypes from 'prop-types';\r\n\r\n\r\n\r\nclass BurgerIngredient extends React.Component {\r\n    \r\n    render() {\r\n\r\n        let ingredient = null;\r\n\r\n        // this component will accept a prop, and depending on what prop it is, we will return a div with that corresponding classname\r\n        switch (this.props.type){\r\n            case ('bread-bottom'):\r\n                ingredient = <div className={styles.BreadBottom}></div>\r\n                break;\r\n            case ('bread-top'):\r\n                ingredient = (\r\n                    <div className={styles.BreadTop}>\r\n                        <div className={styles.Seeds1}></div>\r\n                        <div className={styles.Seeds2}></div>\r\n                    </div>\r\n                    )\r\n                break;\r\n            case ('meat'):\r\n                ingredient = <div className={styles.Meat}></div>\r\n                break;\r\n            case ('cheese'):\r\n                ingredient = <div className={styles.Cheese}></div>\r\n                break;\r\n            case ('lettuce'):\r\n                ingredient = <div className={styles.Lettuce}></div>\r\n                break;\r\n            case ('bacon'):\r\n                ingredient = <div className={styles.Bacon}></div>\r\n                break;\r\n        }\r\n        return ingredient; \r\n    }\r\n};\r\n\r\nBurgerIngredient.propTypes = {\r\n    type: PropTypes.string.isRequired\r\n}\r\n\r\nexport default BurgerIngredient;","C:\\Users\\travi\\Desktop\\SET\\React\\react-lunch-checkout-app\\src\\components\\Burger\\BuildControls\\BuildControls.js",[],"C:\\Users\\travi\\Desktop\\SET\\React\\react-lunch-checkout-app\\src\\components\\Burger\\BuildControls\\AddItem\\AddItem.js",[],{"ruleId":"45","replacedBy":"46"},{"ruleId":"47","replacedBy":"48"},{"ruleId":"49","severity":1,"message":"50","line":14,"column":39,"nodeType":"51","messageId":"52","endLine":14,"endColumn":41},{"ruleId":"53","severity":1,"message":"54","line":14,"column":9,"nodeType":"55","messageId":"56","endLine":38,"endColumn":10},"no-native-reassign",["57"],"no-negated-in-lhs",["58"],"array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","default-case","Expected a default case.","SwitchStatement","missingDefaultCase","no-global-assign","no-unsafe-negation"]